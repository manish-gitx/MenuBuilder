@import "tailwindcss";
@custom-variant dark (&:where(.dark, .dark *));


@theme {
  /* Warm, inviting catering brand colors - space-separated HSL format for Tailwind v4 */
  --color-background: 35 20% 98%;
  --color-foreground: 25 15% 15%;

  --color-card: 0 0% 100%;
  --color-card-foreground: 25 15% 15%;

  --color-popover: 0 0% 100%;
  --color-popover-foreground: 25 15% 15%;

  --color-primary: 25 85% 55%;
  --color-primary-foreground: 0 0% 100%;
  --color-primary-hover: 25 85% 45%;
  
  /* Additional primary color variations for better compatibility */
  --color-primary-50: 25 85% 95%;
  --color-primary-100: 25 85% 90%;
  --color-primary-500: 25 85% 55%;
  --color-primary-600: 25 85% 45%;

  --color-secondary: 35 50% 92%;
  --color-secondary-foreground: 25 60% 25%;

  --color-muted: 35 25% 95%;
  --color-muted-foreground: 25 20% 55%;

  --color-accent: 35 80% 85%;
  --color-accent-foreground: 25 60% 25%;

  --color-destructive: 0 84.2% 60.2%;
  --color-destructive-foreground: 210 40% 98%;

  --color-border: 35 30% 88%;
  --color-input: 35 30% 92%;
  --color-ring: 25 85% 55%;

  /* Custom design tokens */
  --color-warm-orange: 25 85% 55%;
  --color-warm-cream: 35 50% 96%;
  --color-warm-brown: 25 40% 35%;
  --color-warm-gold: 45 85% 65%;
  
  /* Yellow for star ratings */
  --color-yellow-400: 45 93% 58%;
  
  /* Gray colors for better contrast */
  --color-gray-50: 210 40% 98%;
  --color-gray-300: 210 20% 85%;
  --color-white: 0 0% 100%;
  --color-black: 0 0% 0%;
  
  /* Shadows */
  --shadow-warm: 0 10px 30px -10px hsl(25 85% 55% / 0.2);
  --shadow-card: 0 4px 20px -4px hsl(25 40% 35% / 0.1);
  --shadow-2xl: 0 25px 50px -12px hsl(0 0% 0% / 0.25);
  
  /* Border radius */
  --radius-sm: 0.25rem;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;
  --radius-xl: 0.75rem;
  --radius-2xl: 1rem;
  --radius-3xl: 1.5rem;
}

/* Custom CSS for gradients and special effects */
@layer base {
  :root {
    /* Gradients - these need to be regular CSS variables since they're complex values */
    --gradient-hero: linear-gradient(135deg, hsl(25 85% 55%), hsl(45 85% 65%));
    --gradient-section: linear-gradient(180deg, hsl(35 50% 96%), hsl(35 20% 98%));
    
    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

/* Custom utility classes */
@layer utilities {
  .bg-gradient-hero {
    background-image: var(--gradient-hero);
  }
  
  .bg-gradient-section {
    background-image: var(--gradient-section);
  }
  
  .shadow-warm {
    box-shadow: var(--shadow-warm);
  }
  
  .shadow-card {
    box-shadow: var(--shadow-card);
  }
  
  .transition-smooth {
    transition: var(--transition-smooth);
  }
  
  /* Ensure primary color is applied correctly */
  .text-primary {
    color: hsl(var(--color-primary));
  }
  
  .bg-primary {
    background-color: hsl(var(--color-primary));
  }
  
  .bg-primary\/10 {
    background-color: hsl(var(--color-primary) / 0.1);
  }
  
  .bg-primary\/20 {
    background-color: hsl(var(--color-primary) / 0.2);
  }
  
  /* Destructive color utilities */
  .text-destructive {
    color: hsl(var(--color-destructive));
  }
  
  .bg-destructive {
    background-color: hsl(var(--color-destructive));
  }
  
  .text-destructive-foreground {
    color: hsl(var(--color-destructive-foreground));
  }
  
  .bg-destructive-foreground {
    background-color: hsl(var(--color-destructive-foreground));
  }
  
  /* Comprehensive color utilities for all defined colors */
  
  /* Background & Foreground */
  .text-background {
    color: hsl(var(--color-background));
  }
  
  .bg-background {
    background-color: hsl(var(--color-background));
  }
  
  .text-foreground {
    color: hsl(var(--color-foreground));
  }
  
  .bg-foreground {
    background-color: hsl(var(--color-foreground));
  }
  
  /* Card colors */
  .text-card {
    color: hsl(var(--color-card));
  }
  
  .bg-card {
    background-color: hsl(var(--color-card));
  }
  
  .text-card-foreground {
    color: hsl(var(--color-card-foreground));
  }
  
  .bg-card-foreground {
    background-color: hsl(var(--color-card-foreground));
  }
  
  /* Popover colors */
  .text-popover {
    color: hsl(var(--color-popover));
  }
  
  .bg-popover {
    background-color: hsl(var(--color-popover));
  }
  
  .text-popover-foreground {
    color: hsl(var(--color-popover-foreground));
  }
  
  .bg-popover-foreground {
    background-color: hsl(var(--color-popover-foreground));
  }
  
  /* Secondary colors */
  .text-secondary {
    color: hsl(var(--color-secondary));
  }
  
  .bg-secondary {
    background-color: hsl(var(--color-secondary));
  }
  
  .text-secondary-foreground {
    color: hsl(var(--color-secondary-foreground));
  }
  
  .bg-secondary-foreground {
    background-color: hsl(var(--color-secondary-foreground));
  }
  
  /* Muted colors */
  .text-muted {
    color: hsl(var(--color-muted));
  }
  
  .bg-muted {
    background-color: hsl(var(--color-muted));
  }
  
  .text-muted-foreground {
    color: hsl(var(--color-muted-foreground));
  }
  
  .bg-muted-foreground {
    background-color: hsl(var(--color-muted-foreground));
  }
  
  /* Accent colors */
  .text-accent {
    color: hsl(var(--color-accent));
  }
  
  .bg-accent {
    background-color: hsl(var(--color-accent));
  }
  
  .text-accent-foreground {
    color: hsl(var(--color-accent-foreground));
  }
  
  .bg-accent-foreground {
    background-color: hsl(var(--color-accent-foreground));
  }
  
  /* Border, Input, Ring */
  .border-border {
    border-color: hsl(var(--color-border));
  }
  
  .bg-border {
    background-color: hsl(var(--color-border));
  }
  
  .bg-input {
    background-color: hsl(var(--color-input));
  }
  
  .ring-ring {
    ring-color: hsl(var(--color-ring));
  }
  
  /* Custom warm colors */
  .text-warm-orange {
    color: hsl(var(--color-warm-orange));
  }
  
  .bg-warm-orange {
    background-color: hsl(var(--color-warm-orange));
  }
  
  .text-warm-cream {
    color: hsl(var(--color-warm-cream));
  }
  
  .bg-warm-cream {
    background-color: hsl(var(--color-warm-cream));
  }
  
  .text-warm-brown {
    color: hsl(var(--color-warm-brown));
  }
  
  .bg-warm-brown {
    background-color: hsl(var(--color-warm-brown));
  }
  
  .text-warm-gold {
    color: hsl(var(--color-warm-gold));
  }
  
  .bg-warm-gold {
    background-color: hsl(var(--color-warm-gold));
  }
  
  /* Additional utility colors */
  .text-yellow-400 {
    color: hsl(var(--color-yellow-400));
  }
  
  .bg-yellow-400 {
    background-color: hsl(var(--color-yellow-400));
  }
  
  .text-gray-50 {
    color: hsl(var(--color-gray-50));
  }
  
  .bg-gray-50 {
    background-color: hsl(var(--color-gray-50));
  }
  
  .text-gray-300 {
    color: hsl(var(--color-gray-300));
  }
  
  .bg-gray-300 {
    background-color: hsl(var(--color-gray-300));
  }
  
  .text-white {
    color: hsl(var(--color-white));
  }
  
  .bg-white {
    background-color: hsl(var(--color-white));
  }
  
  .text-black {
    color: hsl(var(--color-black));
  }
  
  .bg-black {
    background-color: hsl(var(--color-black));
  }
  
  /* Muted with opacity variants */
  .bg-muted\/10 {
    background-color: hsl(var(--color-muted) / 0.1);
  }
  
  .bg-muted\/20 {
    background-color: hsl(var(--color-muted) / 0.2);
  }
  
  .bg-muted\/50 {
    background-color: hsl(var(--color-muted) / 0.5);
  }
}

/* Mobile touch improvements for drag and drop */
@media (pointer: coarse) {
  .touch-manipulation {
    touch-action: manipulation;
  }
  
  /* Increase touch targets on mobile */
  [data-dnd-kit-sortable-handle] {
    min-width: 44px;
    min-height: 44px;
  }
  
  /* Prevent text selection during drag on mobile */
  .dragging * {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Smooth transitions for mobile */
  .sortable-item {
    transition: transform 150ms ease;
  }
}


.sortable-item,
.sortable-item *,
[data-dnd-kit-sortable-handle],
[data-dnd-kit-sortable-handle] * {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

/* Enhanced drag and drop mobile support */
.drag-handle {
  touch-action: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  cursor: grab;
}

.drag-handle:active {
  cursor: grabbing;
}

/* Global text selection prevention during drag */
body.dragging,
body.dragging * {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  -webkit-touch-callout: none !important;
}

/* Smooth scrolling for the page */
html {
  scroll-behavior: smooth;
}

/* Prevent text selection during touch scrolling on problematic elements */
.no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

/* Enhanced touch targets for better mobile experience */
@media (pointer: coarse) {
  .drag-handle {
    min-width: 48px;
    min-height: 48px;
    padding: 8px;
  }
}